{"ast":null,"code":"var _jsxFileName = \"E:\\\\Abhishek\\\\CMN\\\\src\\\\Component\\\\Activity\\\\Activity.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport \"./Activity.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Activity = () => {\n  _s();\n\n  const [currentItems, setCurrentItems] = useState(data); // const [offset, setOffset] = useState(0);\n  // const [perPage] = useState(2);\n  // const [pageCount, setPageCount] = useState(0);\n  // const handlePageClick = (e) => {\n  //   const selectedPage = e.selected;\n  //   setOffset(selectedPage + 1);\n  // };\n\n  const [pageCount, setPageCount] = useState(0); // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n\n  const [itemOffset, setItemOffset] = useState(0);\n  useEffect(() => {\n    // Fetch items from another resources.\n    const endOffset = itemOffset + itemsPerPage;\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n    setCurrentItems(items.slice(itemOffset, endOffset));\n    setPageCount(Math.ceil(items.length / itemsPerPage));\n  }, [itemOffset, itemsPerPage]); // Invoke when user click to request another page.\n\n  const handlePageClick = event => {\n    const newOffset = event.selected * itemsPerPage % currentItems.length;\n    console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n    setItemOffset(newOffset);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"activity-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"activity-title\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your Activity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-activity\",\n          children: currentItems && currentItems.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"activity-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"liked\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: item.liked\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"heading\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"title\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: item.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"points\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: item.points\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"time\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.credited\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.expire\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        previousLabel: \"<\",\n        nextLabel: \">\" // onPageChange={handlePageClick}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Activity, \"1bea68wfO8HUXlP75hEMr18vLMk=\");\n\n_c = Activity;\nexport default Activity;\nconst data = [{\n  liked: \"Article Liked\",\n  title: \"Walmart announces its own cryptocurrency and NFT sale\",\n  points: \"+9 points\",\n  credited: \"Credited on 24-5-22\",\n  expire: \"Expires on 24-6-22\"\n}, {\n  liked: \"Article Liked\",\n  title: \"Walmart announces its own cryptocurrency and NFT sale\",\n  points: \"+9 points\",\n  credited: \"Credited on 24-5-22\",\n  expire: \"Expires on 24-6-22\"\n}, {\n  liked: \"Article Liked\",\n  title: \"Walmart announces its own cryptocurrency and NFT sale\",\n  points: \"+9 points\",\n  credited: \"Credited on 24-5-22\",\n  expire: \"Expires on 24-6-22\"\n}, {\n  liked: \"Article Liked\",\n  title: \"Walmart announces its own cryptocurrency and NFT sale\",\n  points: \"+9 points\",\n  credited: \"Credited on 24-5-22\",\n  expire: \"Expires on 24-6-22\"\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"Activity\");","map":{"version":3,"names":["React","useState","ReactPaginate","Activity","currentItems","setCurrentItems","data","pageCount","setPageCount","itemOffset","setItemOffset","useEffect","endOffset","itemsPerPage","console","log","items","slice","Math","ceil","length","handlePageClick","event","newOffset","selected","map","item","liked","title","points","credited","expire","id"],"sources":["E:/Abhishek/CMN/src/Component/Activity/Activity.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"./Activity.css\";\r\n\r\nconst Activity = () => {\r\n  const [currentItems, setCurrentItems] = useState(data);\r\n  // const [offset, setOffset] = useState(0);\r\n  // const [perPage] = useState(2);\r\n  // const [pageCount, setPageCount] = useState(0);\r\n\r\n  // const handlePageClick = (e) => {\r\n  //   const selectedPage = e.selected;\r\n  //   setOffset(selectedPage + 1);\r\n  // };\r\n  const [pageCount, setPageCount] = useState(0);\r\n  // Here we use item offsets; we could also use page offsets\r\n  // following the API or data you're working with.\r\n  const [itemOffset, setItemOffset] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Fetch items from another resources.\r\n    const endOffset = itemOffset + itemsPerPage;\r\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n    setCurrentItems(items.slice(itemOffset, endOffset));\r\n    setPageCount(Math.ceil(items.length / itemsPerPage));\r\n  }, [itemOffset, itemsPerPage]);\r\n\r\n  // Invoke when user click to request another page.\r\n  const handlePageClick = (event) => {\r\n    const newOffset = (event.selected * itemsPerPage) % currentItems.length;\r\n    console.log(\r\n      `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n    );\r\n    setItemOffset(newOffset);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"activity-section\">\r\n          <div className=\"activity-title\">\r\n            <p>Your Activity</p>\r\n          </div>\r\n\r\n          <div className=\"main-activity\">\r\n            {currentItems &&\r\n              currentItems.map((item) => {\r\n                return (\r\n                  <div className=\"activity-content\" key={item.id}>\r\n                    <div className=\"liked\">\r\n                      <p>{item.liked}</p>\r\n                    </div>\r\n                    <div className=\"heading\">\r\n                      <div className=\"title\">\r\n                        <p>{item.title}</p>\r\n                      </div>\r\n                      <div className=\"points\">\r\n                        <p>{item.points}</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"time\">\r\n                      <span>{item.credited}</span>\r\n                      <span>{item.expire}</span>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n\r\n        <ReactPaginate\r\n          previousLabel={\"<\"}\r\n          nextLabel={\">\"}\r\n          // onPageChange={handlePageClick}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Activity;\r\n\r\nconst data = [\r\n  {\r\n    liked: \"Article Liked\",\r\n    title: \"Walmart announces its own cryptocurrency and NFT sale\",\r\n    points: \"+9 points\",\r\n    credited: \"Credited on 24-5-22\",\r\n    expire: \"Expires on 24-6-22\",\r\n  },\r\n  {\r\n    liked: \"Article Liked\",\r\n    title: \"Walmart announces its own cryptocurrency and NFT sale\",\r\n    points: \"+9 points\",\r\n    credited: \"Credited on 24-5-22\",\r\n    expire: \"Expires on 24-6-22\",\r\n  },\r\n  {\r\n    liked: \"Article Liked\",\r\n    title: \"Walmart announces its own cryptocurrency and NFT sale\",\r\n    points: \"+9 points\",\r\n    credited: \"Credited on 24-5-22\",\r\n    expire: \"Expires on 24-6-22\",\r\n  },\r\n  {\r\n    liked: \"Article Liked\",\r\n    title: \"Walmart announces its own cryptocurrency and NFT sale\",\r\n    points: \"+9 points\",\r\n    credited: \"Credited on 24-5-22\",\r\n    expire: \"Expires on 24-6-22\",\r\n  },\r\n];\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}